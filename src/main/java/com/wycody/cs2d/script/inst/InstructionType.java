package com.wycody.cs2d.script.inst;

import com.wycody.cs2d.print.ScriptPrinter;

/**
 * The type of the instruction, each instruction should only have one of these
 *
 * @author Walied-Yassen
 * @date Nov 6, 2015
 */
public enum InstructionType {

	NULL("NULL:{id},{operand}", InstructionBaseType.NULL),
	// Control flow
	PUSH_INT(true, "PUSH_INT: {operand}", InstructionBaseType.PUSH),
	// New variables (post-745)
	PUSH_VAR(true, "PUSH_VAR: {operand} {operand}", InstructionBaseType.PUSH),
	STORE_VAR(true, "STORE_VAR: {operand} {operand}f", InstructionBaseType.POP),
	PUSH_VAR_BIT(true, "PUSH_VAR_BIT: {operand} {operand}", InstructionBaseType.PUSH),
	STORE_VAR_BIT(true, "STORE_VAR_BIT: {operand} {operand}", InstructionBaseType.POP),
	// End new variables
	// Old variables (pre-745)
	PUSH_VARP(true, "PUSH_VARP: {operand}", InstructionBaseType.PUSH),
	STORE_VARP(true, "STORE_VARP: {operand}", InstructionBaseType.POP),
	PUSH_VARPBIT(true, "PUSH_VARPBIT: {operand}", InstructionBaseType.PUSH),
	STORE_VARPBIT(true, "STORE_VARPBIT: {operand}", InstructionBaseType.POP),
	PUSH_VARC(true, "PUSH_VARC: {operand}", InstructionBaseType.PUSH),
	STORE_VARC(true, "STORE_VARC: {operand}", InstructionBaseType.POP),
	PUSH_VARCSTR(true, "PUSH_VARCSTR: {operand}", InstructionBaseType.PUSH),
	STORE_VARC_STR(true, "STORE_VARCSTR: {operand}", InstructionBaseType.POP),
	PUSH_VARCLAN(true, "PUSH_VARCLAN: {operand}", InstructionBaseType.PUSH),
	PUSH_VARCLAN_BIT(true, "PUSH_VARCLAN_BIT: {operand}", InstructionBaseType.PUSH),
	PUSH_VARCLAN_LONG(true, "PUSH_VARCLAN_LONG: {operand}", InstructionBaseType.PUSH),
	PUSH_VARCLAN_STR(true, "PUSH_VARCLAN_STR: {operand}", InstructionBaseType.PUSH),
	PUSH_VARCLANSETTING(true, "PUSH_VARCLANSETTING: {operand}", InstructionBaseType.PUSH),
	PUSH_VARCLANSETTING_BIT(true, "PUSH_VARCLANSETTING_BIT: {operand}", InstructionBaseType.PUSH),
	PUSH_VARCLANSETTING_LONG(true, "PUSH_VARCLANSETTING_LONG: {operand}", InstructionBaseType.PUSH),
	PUSH_VARCLANSETTING_STR(true, "PUSH_VARCLANSETTING_STR: {operand}", InstructionBaseType.PUSH),
	// End old variables
	PUSH_OBJ(true, "PUSH_OBJ: {operand}", InstructionBaseType.PUSH),
	JUMP(true, "JUMP: {operand}", InstructionBaseType.JUMP),
	INT_NE(true, "INT_NE: {operand}", InstructionBaseType.BRANCH),
	INT_EQ(true, "INT_EQ: {operand}", InstructionBaseType.BRANCH),
	INT_LT(true, "INT_LT: {operand}", InstructionBaseType.BRANCH),
	INT_GT(true, "INT_GT: {operand}", InstructionBaseType.BRANCH),
	INT_LE(true, "INT_LE: {operand}", InstructionBaseType.BRANCH),
	INT_GE(true, "INT_GE: {operand}", InstructionBaseType.BRANCH),
	LOAD_INT(true, "LOAD_INT: {operand}", InstructionBaseType.PUSH),
	STORE_INT(true, "STORE_INT: {operand}", InstructionBaseType.POP),
	LOAD_OBJ(true, "LOAD_OBJ: {operand}", InstructionBaseType.PUSH),
	STORE_OBJ(true, "STORE_OBJ: {operand}", InstructionBaseType.POP),
	MULTISTRING_CONCAT(true, "MULTISTRING_CONCAT: {operand}", InstructionBaseType.POP),
	POP_INT(false, "POP_INT: {operand}", InstructionBaseType.POP),
	POP_OBJ(false, "POP_OBJ: {operand}", InstructionBaseType.POP),
	CALL_SCRIPT(true, "CALLSCRIPT: {operand}", InstructionBaseType.EXECUTE),
	NEW_ARRAY(true, "NEW_ARRAY: {operand}", InstructionBaseType.POP),
	ARRAY_LOAD(true, "ARRAY_LOAD: {operand}", InstructionBaseType.PUSH),
	ARRAY_STORE(true, "ARRAY_STORE: {operand}", InstructionBaseType.POP),
	SWITCH(true, "SWITCH: {operand}", InstructionBaseType.SWITCH),
	PUSH_LONG(true, "PUSH_LONG: {operand}", InstructionBaseType.PUSH),
	POP_LONG(true, "POP_LONG: {operand}", InstructionBaseType.POP),
	LOAD_LONG(true, "LOAD_LONG: {operand}", InstructionBaseType.PUSH),
	STORE_LONG(true, "STORE_LONG: {operand}", InstructionBaseType.POP),
	LONG_NE(true, "LONG_NE: {operand}", InstructionBaseType.BRANCH),
	LONG_EQ(true, "LONG_EQ: {operand}", InstructionBaseType.BRANCH),
	LONG_LT(true, "LONG_LT: {operand}", InstructionBaseType.BRANCH),
	LONG_GT(true, "LONG_GT: {operand}", InstructionBaseType.BRANCH),
	LONG_LE(true, "LONG_LE: {operand}", InstructionBaseType.BRANCH),
	LONG_GE(true, "LONG_GE: {operand}", InstructionBaseType.BRANCH),
	GOTO(true, "GOTO: {operand}", InstructionBaseType.BRANCH),
	ARRAY_LOAD_PUSH_INDEX_BEFORE(true, "ARRAY_LOAD_PUSH_INDEX_BEFORE: {operand}", InstructionBaseType.PUSH),
	ARRAY_LOAD_PUSH_INDEX_AFTER(true, "ARRAY_LOAD_PUSH_INDEX_AFTER: {operand}", InstructionBaseType.PUSH),
	ARRAY_STORE_PUSH_INDEX(true, "ARRAY_STORE_PUSH_INDEX: {operand}", InstructionBaseType.POP),
	TRUE_INT(true, "TRUE_INT: {operand}", InstructionBaseType.BRANCH),
	FALSE_INT(true, "FALSE_INT: {operand}", InstructionBaseType.BRANCH),
	RETURN("RETURN: {stacks}", InstructionBaseType.RETURN), // well temporary

	// Component container instructions
	CC_CREATE("CC_CREATE", InstructionBaseType.EXECUTE),
	CC_DELETE("CC_DELETE", InstructionBaseType.EXECUTE),
	CC_CLEAR("CC_CLEAR", InstructionBaseType.EXECUTE),
	CC_SETACTIVE("CC_SETACTIVE", InstructionBaseType.PUSH),
	COMP_SETACTIVE("COMP_SETACTIVE", InstructionBaseType.PUSH),

	// Active player instructions
	PLAYER_SETIDK("PLAYER_SETIDK", InstructionBaseType.EXECUTE),
	PLAYER_SETCOL("PLAYER_SETCOL", InstructionBaseType.EXECUTE),
	PLAYER_SETGENDER("PLAYER_SETGENDER", InstructionBaseType.EXECUTE),
	PLAYER_SETWORNOBJ("PLAYER_SETWORNOBJ", InstructionBaseType.EXECUTE),

	// Active component layout instructions
	AC_SETPOS("AC_SETPOS", InstructionBaseType.EXECUTE),
	AC_SETSIZE("AC_SETSIZE", InstructionBaseType.EXECUTE),
	AC_SETHIDE("AC_SETHIDE", InstructionBaseType.EXECUTE),
	AC_SETASPECTRATIO("AC_SETASPECTRATIO", InstructionBaseType.EXECUTE),
	AC_SETSOLID("AC_SETSOLID", InstructionBaseType.EXECUTE),

	// Active component attribute setting instructions
	AC_SETSCROLLPOS("AC_SETSCROLLPOS", InstructionBaseType.EXECUTE),
	AC_SETCOLOUR("AC_SETCOLOUR", InstructionBaseType.EXECUTE),
	AC_SETFILLED("AC_SETFILLED", InstructionBaseType.EXECUTE),
	AC_SETALPHA("AC_SETALPHA", InstructionBaseType.EXECUTE),
	AC_SETLINEWEIGHT("AC_SETLINEWEIGHT", InstructionBaseType.EXECUTE),
	AC_SETGRAPHIC("AC_SETGRAPHIC", InstructionBaseType.EXECUTE),
	AC_SETGRAPHICROT("AC_SETGRAPHICROT", InstructionBaseType.EXECUTE),
	AC_SETGRAPHICREPEAT("AC_SETGRAPHICREPEAT", InstructionBaseType.EXECUTE),
	AC_SETMODEL("AC_SETMODEL", InstructionBaseType.EXECUTE),
	AC_SETMODELCONSTRAINTS("AC_SETMODELCONSTRAINTS", InstructionBaseType.EXECUTE),
	AC_SETANIMATION("AC_SETANIMATION", InstructionBaseType.EXECUTE),
	// 2x unknown
	AC_SETTEXT("AC_SETTEXT", InstructionBaseType.EXECUTE),
	AC_SETFONT("AC_SETFONT", InstructionBaseType.EXECUTE),
	AC_SETTEXTALIGN("AC_SETTEXTALIGN", InstructionBaseType.EXECUTE),
	AC_SETSHADED("AC_SETSHADED", InstructionBaseType.EXECUTE),
	// 2x unknown
	AC_SETBACKGROUNDCOL("AC_SETBACKGROUNDCOL", InstructionBaseType.EXECUTE),
	AC_SETFLIPY("AC_SETFLIPY", InstructionBaseType.EXECUTE),
	AC_SETFLIPX("AC_SETFLIPX", InstructionBaseType.EXECUTE),
	AC_SETSCROLLBOUNDS("AC_SETSCROLLBOUNDS", InstructionBaseType.EXECUTE),
	// 1x unknown
	AC_SETMODELZOOM("AC_SETMODELZOOM", InstructionBaseType.EXECUTE),
	AC_SETLINEMIRRORED("AC_SETLINEMIRRORED", InstructionBaseType.EXECUTE),
	AC_SETMODELOFFSET("AC_SETMODELOFFSET", InstructionBaseType.EXECUTE),
	AC_SETTEXTLINECOUNT("AC_SETTEXTLINECOUNT", InstructionBaseType.EXECUTE),
	AC_SETPARAM_INT("AC_SETPARAM_INT", InstructionBaseType.EXECUTE),
	AC_SETPARAM_STR("AC_SETPARAM_STR", InstructionBaseType.EXECUTE),
	// 4x unknown
	AC_SETMONOCHROMEFONT("AC_SETMONOCHROMEFONT", InstructionBaseType.EXECUTE),
	// 2x unknown
	AC_SETOBJECT("AC_SETOBJECT", InstructionBaseType.EXECUTE),

	// Active component interaction setting instructions
	AC_SETOP("AC_SETOP", InstructionBaseType.EXECUTE),
	AC_SETDEFAULTSLOT("AC_SETDEFAULTSLOT", InstructionBaseType.EXECUTE),
	AC_SETCONTENTTYPE("AC_SETCONTENTTYPE", InstructionBaseType.EXECUTE),
	// 2x unknown
	AC_SETAPPLYTEXT("AC_SETAPPLYTEXT", InstructionBaseType.EXECUTE),
	AC_SETUSEOP("AC_SETUSEOP", InstructionBaseType.EXECUTE),
	AC_CLEAROPS("AC_CLEAROPS", InstructionBaseType.EXECUTE),
	AC_SETUSETARGETCUR("AC_SETUSETARGETCUR", InstructionBaseType.EXECUTE),
	AC_SETOPCUR("AC_SETOPCUR", InstructionBaseType.EXECUTE),
	AC_SETDEFAULTOP("AC_SETDEFAULTOP", InstructionBaseType.EXECUTE),
	AC_SETUSEOPCUR("AC_SETUSEOPCUR", InstructionBaseType.EXECUTE),
	// 4x unknown
	AC_SETDEFAULTCUR("AC_SETDEFAULTCUR", InstructionBaseType.EXECUTE),

	// Active component event binding
	AC_SET_MOUSEPRESS_HANDLER("AC_SET_MOUSEPRESS_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_MOUSEDRAGPAST_HANDLER("AC_SET_MOUSEDRAGPAST_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_MOUSERELEASE_HANDLER("AC_SET_MOUSERELEASE_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_MOUSEOVER_HANDLER("AC_SET_MOUSEOVER_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_MOUSEOUT_HANDLER("AC_SET_MOUSEOUT_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_DRAGRELEASE_HANDLER("AC_SET_DRAGRELEASE_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_DESELECT_HANDLER("AC_SET_DESELECT_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_VARP_HANDLER("AC_SET_VARP_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_UPDATE_HANDLER("AC_SET_UPDATE_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_OPTION_HANDLER("AC_SET_OPTION_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_DRAG_HANDLER("AC_SET_DRAG_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_MOUSEDRAG_HANDLER("AC_SET_MOUSEDRAG_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_MOUSEMOVE_HANDLER("AC_SET_MOUSEMOVE_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_INV_HANDLER("AC_SET_INV_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_STAT_HANDLER("AC_SET_STAT_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_SELECT_HANDLER("AC_SET_SELECT_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_MOUSESCROLL_HANDLER("AC_SET_MOUSESCROLL_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_CHAT_HANDLER("AC_SET_CHAT_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_KEYPRESS_HANDLER("AC_SET_KEYPRESS_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_FRIENDLIST_HANDLER("AC_SET_FRIENDLIST_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_FRIENDCHAT_HANDLER("AC_SET_FRIENDCHAT_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_STATUS_HANDLER("AC_SET_STATUS_HANDLER", InstructionBaseType.EXECUTE),
	// 1x unknown
	AC_SET_ATTACHMENT_HANDLER("AC_SET_ATTACHMENT_HANDLER", InstructionBaseType.EXECUTE),
	// 1x unknown
	AC_SET_RESIZE_HANDLER("AC_SET_RESIZE_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_EXCHANGE_HANDLER("AC_SET_EXCHANGE_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_VARC_HANDLER("AC_SET_VARC_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_VARCSTR_HANDLER("AC_SET_VARCSTR_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_USE_HANDLER("AC_SET_USE_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_CLANSETTINGS_HANDLER("AC_SET_CLANSETTINGS_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_CLANCHANNEL_HANDLER("AC_SET_CLANCHANNEL_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_VARCLAN_HANDLER("AC_SET_VARCLAN_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_GROUPCHANNEL_HANDLER("AC_SET_GROUPCHANNEL_HANDLER", InstructionBaseType.EXECUTE),
	AC_SET_VARGROUP_HANDLER("AC_SET_VARGROUP_HANDLER", InstructionBaseType.EXECUTE),
	// 1x unknown
	AC_CLEAR_HANDLERS("AC_CLEAR_HANDLERS", InstructionBaseType.EXECUTE),

	// Active component attribute retrieving instructions
	PUSH_AC_POSX("PUSH_AC_POSX", InstructionBaseType.PUSH),
	PUSH_AC_POSY("PUSH_AC_POSY", InstructionBaseType.PUSH),
	PUSH_AC_WIDTH("PUSH_AC_WIDTH", InstructionBaseType.PUSH),
	PUSH_AC_HEIGHT("PUSH_AC_HEIGHT", InstructionBaseType.PUSH),
	PUSH_AC_HIDE("PUSH_AC_HIDE", InstructionBaseType.PUSH),
	PUSH_AC_PARENT("PUSH_AC_PARENT", InstructionBaseType.PUSH),
	PUSH_AC_HASH("PUSH_AC_HASH", InstructionBaseType.PUSH),
	PUSH_AC_COL("PUSH_AC_COL", InstructionBaseType.PUSH),
	PUSH_AC_SCROLLX("PUSH_AC_SCROLLX", InstructionBaseType.PUSH),
	PUSH_AC_SCROLLY("PUSH_AC_SCROLLY", InstructionBaseType.PUSH),
	PUSH_AC_TEXT("PUSH_AC_TEXT", InstructionBaseType.PUSH),
	PUSH_AC_SCROLLWID("PUSH_AC_SCROLLWID", InstructionBaseType.PUSH),
	PUSH_AC_SCROLLHEI("PUSH_AC_SCROLLHEI", InstructionBaseType.PUSH),
	PUSH_AC_MODELZOOM("PUSH_AC_MODELZOOM", InstructionBaseType.PUSH),
	PUSH_AC_MODELROT_X("PUSH_AC_MODELROT_X", InstructionBaseType.PUSH),
	PUSH_AC_MODELROT_Z("PUSH_AC_MODELROT_Z", InstructionBaseType.PUSH),
	PUSH_AC_MODELROT_Y("PUSH_AC_MODELROT_Y", InstructionBaseType.PUSH),
	PUSH_AC_ALPHA("PUSH_AC_ALPHA", InstructionBaseType.PUSH),
	// 2x unknown
	PUSH_AC_GRAPHIC("PUSH_AC_GRAPHIC", InstructionBaseType.PUSH),
	PUSH_AC_PARAM("PUSH_AC_PARAM_INT", InstructionBaseType.PUSH),
	PUSH_AC_GRAPHICROT("PUSH_AC_GRAPHICROT", InstructionBaseType.PUSH),
	PUSH_AC_MODEL("PUSH_AC_MODEL", InstructionBaseType.PUSH),
	PUSH_AC_FONT("PUSH_AC_FONT", InstructionBaseType.PUSH),
	// 4x unknown
	PUSH_AC_SLOT("PUSH_AC_SLOT", InstructionBaseType.PUSH),
	// 1x unknown
	PUSH_AC_OP("PUSH_AC_OP", InstructionBaseType.PUSH),
	PUSH_AC_APPLYNAME("PUSH_AC_APPLYNAME", InstructionBaseType.PUSH),

	// Component layout instructions
	COMP_SETPOS("COMP_SETPOS", InstructionBaseType.EXECUTE),
	COMP_SETSIZE("COMP_SETSIZE", InstructionBaseType.EXECUTE),
	COMP_SETHIDE("COMP_SETHIDE", InstructionBaseType.EXECUTE),
	COMP_SETASPECTRATIO("COMP_SETASPECTRATIO", InstructionBaseType.EXECUTE),
	COMP_SETSOLID("COMP_SETSOLID", InstructionBaseType.EXECUTE),

	// Component attribute instructions.
	COMP_SETSCROLLPOS("COMP_SETSCROLLPOS", InstructionBaseType.EXECUTE),
	COMP_SETCOL("COMP_SETCOL", InstructionBaseType.EXECUTE),
	COMP_SETFILLED("COMP_SETFILLED", InstructionBaseType.EXECUTE),
	COMP_SETALPHA("COMP_SETALPHA", InstructionBaseType.EXECUTE),
	COMP_SETLINEWEIGHT("COMP_SETLINEWEIGHT", InstructionBaseType.EXECUTE),
	COMP_SETGRAPHIC("COMP_SETGRAPHIC", InstructionBaseType.EXECUTE),
	COMP_SETGRAPHICROT("COMP_SETGRAPHICROT", InstructionBaseType.EXECUTE),
	COMP_SETGRAPHICREPEAT("COMP_SETGRAPHICREPEAT", InstructionBaseType.EXECUTE),
	COMP_SETMODEL("COMP_SETMODEL", InstructionBaseType.EXECUTE),
	COMP_SETMODELCONSTRAINTS("COMP_SETMODELCONSTRAINTS", InstructionBaseType.EXECUTE),
	COMP_SETANIMATION("COMP_SETANIMATION", InstructionBaseType.EXECUTE),
	// 2x unknown
	COMP_SETTEXT("COMP_SETTEXT", InstructionBaseType.EXECUTE),
	COMP_SETFONT("COMP_SETFONT", InstructionBaseType.EXECUTE),
	COMP_SETTEXTALIGN("COMP_SETTEXTALIGN", InstructionBaseType.EXECUTE),
	COMP_SETSHADED("COMP_SETSHADED", InstructionBaseType.EXECUTE),
	// 2x unknown
	COMP_SETBACKGROUNDCOL("COMP_SETBACKGROUNDCOL", InstructionBaseType.EXECUTE),
	COMP_SETFLIPY("COMP_SETFLIPY", InstructionBaseType.EXECUTE),
	COMP_SETFLIPX("COMP_SETFLIPX", InstructionBaseType.EXECUTE),
	COMP_SETSCROLLBOUNDS("COMP_SETSCROLLBOUNDS", InstructionBaseType.EXECUTE),
	// 1x unknown
	COMP_SETMODELZOOM("COMP_SETMODELZOOM", InstructionBaseType.EXECUTE),
	COMP_SETLINEMIRRORED("COMP_SETLINEMIRRORED", InstructionBaseType.EXECUTE),
	COMP_SETMODELOFFSET("COMP_SETMODELOFFSET", InstructionBaseType.EXECUTE),
	COMP_SETTEXTLINECOUNT("COMP_SETTEXTLINECOUNT", InstructionBaseType.EXECUTE),
	COMP_SETPARAM_INT("COMP_SETPARAM_INT", InstructionBaseType.EXECUTE),
	COMP_SETPARAM_STR("COMP_SETPARAM_STR", InstructionBaseType.EXECUTE),
	// 4x unknown
	COMP_SETMONOCHROMEFONT("COMP_SETMONOCHROMEFONT", InstructionBaseType.EXECUTE),
	// 1x unknown
	COMP_SETOBJECT("COMP_SETOBJECT", InstructionBaseType.EXECUTE),

	// Component - interaction setters
	COMP_SETOP("COMP_SETOP", InstructionBaseType.EXECUTE),
	COMP_SETDEFAULTSLOT("COMP_SETDEFAULTSLOT", InstructionBaseType.EXECUTE),
	COMP_SETCONTENTTYPE("COMP_SETCONTENTTYPE", InstructionBaseType.EXECUTE),
	// 2x unknown
	COMP_SETAPPLYTEXT("COMP_SETAPPLYTEXT", InstructionBaseType.EXECUTE),
	COMP_SETUSEOP("COMP_SETUSEOP", InstructionBaseType.EXECUTE),
	COMP_CLEAROPS("COMP_CLEAROPS", InstructionBaseType.EXECUTE),
	COMP_SETUSETARGETCUR("COMP_SETUSETARGETCUR", InstructionBaseType.EXECUTE),
	COMP_SETOPCUR("COMP_SETOPCUR", InstructionBaseType.EXECUTE),
	COMP_SETDEFAULTOP("COMP_SETDEFAULTOP", InstructionBaseType.EXECUTE),
	COMP_SETUSEOPCUR("COMP_SETUSEOPCUR", InstructionBaseType.EXECUTE),
	// 4x unknown
	COMP_SETDEFAULTCUR("COMP_SETDEFAULTCUR", InstructionBaseType.EXECUTE),

	// Component event binding
	COMP_SET_MOUSEPRESS_HANDLER("COMP_SET_MOUSEPRESS_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_MOUSEDRAGPAST_HANDLER("COMP_SET_MOUSEDRAGPAST_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_MOUSERELEASE_HANDLER("COMP_SET_MOUSERELEASE_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_MOUSEOVER_HANDLER("COMP_SET_MOUSEOVER_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_MOUSEOUT_HANDLER("COMP_SET_MOUSEOUT_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_DRAGRELEASE_HANDLER("COMP_SET_DRAGRELEASE_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_DESELECT_HANDLER("COMP_SET_DESELECT_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_VARP_HANDLER("COMP_SET_VARP_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_UPDATE_HANDLER("COMP_SET_UPDATE_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_OPTION_HANDLER("COMP_SET_OPTION_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_DRAG_HANDLER("COMP_SET_DRAG_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_MOUSEDRAG_HANDLER("COMP_SET_MOUSEDRAG_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_MOUSEHOVER_HANDLER("COMP_SET_MOUSEMOVE_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_INV_HANDLER("COMP_SET_INV_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_STAT_HANDLER("COMP_SET_STAT_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_SELECT_HANDLER("COMP_SET_SELECT_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_MOUSESCROLL_HANDLER("COMP_SET_MOUSESCROLL_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_CHAT_HANDLER("COMP_SET_CHAT_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_KEYPRESS_HANDLER("COMP_SET_KEYPRESS_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_FRIENDLIST_HANDLER("COMP_SET_FRIENDLIST_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_FRIENDCHAT_HANDLER("COMP_SET_FRIENDCHAT_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_STATUS_HANDLER("COMP_SET_STATUS_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_ATTACHMENT_HANDLER("COMP_SET_ATTACHMENT_HANDLER", InstructionBaseType.EXECUTE),
	// 1x unknown
	COMP_SET_EXCHANGE_HANDLER("COMP_SET_EXCHANGE_HANDLER", InstructionBaseType.EXECUTE),
	// 1x unknown
	COMP_SET_RESIZE_HANDLER("COMP_SET_RESIZE_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_VARC_HANDLER("COMP_SET_VARC_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_VARCSTR_HANDLER("COMP_SET_VARCSTR_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_USE_HANDLER("COMP_SET_USE_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_CLANSETTINGS_HANDLER("COMP_SET_CLANSETTINGS_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_CLANCHANNEL_HANDLER("COMP_SET_CLANCHANNEL_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_VARCLAN_HANDLER("COMP_SET_VARCLAN_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_GROUPCHANNEL_HANDLER("COMP_SET_GROUPCHANNEL_HANDLER", InstructionBaseType.EXECUTE),
	COMP_SET_VARGROUP_HANDLER("COMP_SET_VARGROUP_HANDLER", InstructionBaseType.EXECUTE),
	COMP_CLEAR_HANDLERS("COMP_CLEAR_HANDLERS", InstructionBaseType.EXECUTE),

	COMP_SET_HANDLER("SET_HANDLER", InstructionBaseType.EXECUTE),

	// Component layout getters
	PUSH_COMP_POSX("PUSH_COMP_POSX", InstructionBaseType.PUSH),
	PUSH_COMP_POSY("PUSH_COMP_POSY", InstructionBaseType.PUSH),
	PUSH_COMP_WIDTH("PUSH_COMP_WIDTH", InstructionBaseType.PUSH),
	PUSH_COMP_HEIGHT("PUSH_COMP_HEIGHT", InstructionBaseType.PUSH),
	PUSH_COMP_HIDE("PUSH_COMP_HIDE", InstructionBaseType.PUSH),
	PUSH_COMP_PARENT("PUSH_COMP_PARENT", InstructionBaseType.PUSH),
	PUSH_COMP_HASH("PUSH_COMP_HASH", InstructionBaseType.PUSH),
	PUSH_COMP_COL("PUSH_COMP_COL", InstructionBaseType.PUSH),

	// Component attribute getters
	PUSH_COMP_SCROLLX("PUSH_COMP_SCROLLX", InstructionBaseType.PUSH),
	PUSH_COMP_SCROLLY("PUSH_COMP_SCROLLY", InstructionBaseType.PUSH),
	PUSH_COMP_TEXT("PUSH_COMP_TEXT", InstructionBaseType.PUSH),
	PUSH_COMP_SCROLLWID("PUSH_COMP_SCROLLWID", InstructionBaseType.PUSH),
	PUSH_COMP_SCROLLHEI("PUSH_COMP_SCROLLHEI", InstructionBaseType.PUSH),
	PUSH_COMP_MODELZOOM("PUSH_COMP_MODELZOOM", InstructionBaseType.PUSH),
	PUSH_COMP_MODELROT_X("PUSH_COMP_MODELROT_X", InstructionBaseType.PUSH),
	PUSH_COMP_MODELROT_Z("PUSH_COMP_MODELROT_Z", InstructionBaseType.PUSH),
	PUSH_COMP_MODELROT_Y("PUSH_COMP_MODELROT_Y", InstructionBaseType.PUSH),
	PUSH_COMP_ALPHA("PUSH_COMP_ALPHA", InstructionBaseType.PUSH),
	// 2x unknown
	PUSH_COMP_GRAPHIC("PUSH_COMP_GRAPHIC", InstructionBaseType.PUSH),
	PUSH_COMP_GRAPHICROT("PUSH_COMP_GRAPHICROT", InstructionBaseType.PUSH),
	PUSH_COMP_MODEL("PUSH_COMP_MODEL", InstructionBaseType.PUSH),
	PUSH_COMP_FONT("PUSH_COMP_FONT", InstructionBaseType.PUSH),
	PUSH_COMP_GRAPHICSIZE("PUSH_COMP_GRAPHICSIZE", InstructionBaseType.PUSH_MULTI),

	// Component container getters
	PUSH_COMP_OBJECT("PUSH_COMP_OBJECT", InstructionBaseType.PUSH),
	PUSH_COMP_OBJCOUNT("PUSH_COMP_OBJCOUNT", InstructionBaseType.PUSH),
	// 1x unknown
	PUSH_COMP_EMPTYSLOT("PUSH_COMP_EMPTYSLOT", InstructionBaseType.PUSH),

	// Component - interaction getters
	PUSH_COMP_TARGETFLAGS("PUSH_COMP_TARGETFLAGS", InstructionBaseType.PUSH),
	PUSH_COMP_OP("PUSH_COMP_OP", InstructionBaseType.PUSH),
	PUSH_COMP_APPLYNAME("PUSH_COMP_APPLYNAME", InstructionBaseType.PUSH),

	// General action executors
	MES("MES", InstructionBaseType.EXECUTE),
	// 1x unknown
	CLOSE_MODAL("CLOSE_MODAL", InstructionBaseType.EXECUTE),
	RESUME_P_COUNTDIALOG("RESUME_P_COUNTDIALOG", InstructionBaseType.EXECUTE),
	RESUME_P_NAMEDIALOG("RESUME_P_NAMEDIALOG", InstructionBaseType.EXECUTE),
	RESUME_P_STRINGDIALOG("RESUME_P_STRINGDIALOG", InstructionBaseType.EXECUTE),
	INVOKE_PLAYER_OPTION("INVOKE_PLAYER_OPTION", InstructionBaseType.EXECUTE),
	// 2x unknown
	RESUME_P_OBJDIALOG("RESUME_P_OBJDIALOG", InstructionBaseType.EXECUTE),
	// 1x unknown
	IF_CLOSESUB("IF_CLOSESUB", InstructionBaseType.EXECUTE),
	USE_ON_PLAYER("USE_ON_PLAYER", InstructionBaseType.EXECUTE),
	MES_TYPED("MES_TYPED", InstructionBaseType.EXECUTE),
	// 1x unknown
	RESUME_P_HSLDIALOG("RESUME_P_HSLDIALOG", InstructionBaseType.EXECUTE),
	RESUME_P_CLANFORUMQFCDIALOG("RESUME_P_CLANFORUMQFCDIALOG", InstructionBaseType.EXECUTE),

	// General attribute getters
	PUSH_CLIENT_CYCLE("PUSH_CLIENT_CYCLE", InstructionBaseType.PUSH),
	PUSH_INV_SLOTOBJ("PUSH_INV_SLOTOBJ", InstructionBaseType.PUSH),
	PUSH_INV_SLOTCOUNT("PUSH_INV_SLOTCOUNT", InstructionBaseType.PUSH),
	PUSH_INV_OBJCOUNT("PUSH_INV_OBJCOUNT", InstructionBaseType.PUSH),
	PUSH_INV_CATCOUNT("PUSH_INV_CATCOUNT", InstructionBaseType.PUSH),
	PUSH_INV_CAPACITY("PUSH_INV_CAPACITY", InstructionBaseType.PUSH),
	PUSH_INV_STOCKCOUNT("PUSH_INV_STOCKCOUNT", InstructionBaseType.PUSH),
	PUSH_STAT_LEVEL("PUSH_STAT_LEVEL", InstructionBaseType.PUSH),
	PUSH_STAT_BASE("PUSH_STAT_BASE", InstructionBaseType.PUSH),
	PUSH_STAT_EXPERIENCE("PUSH_STAT_EXPERIENCE", InstructionBaseType.PUSH),
	PUSH_PLAYER_COORD("PUSH_PLAYER_COORD", InstructionBaseType.PUSH),
	PUSH_COORD_X("PUSH_COORD_X", InstructionBaseType.PUSH),
	PUSH_COORD_LEVEL("PUSH_COORD_LEVEL", InstructionBaseType.PUSH),
	PUSH_COORD_Y("PUSH_COORD_Y", InstructionBaseType.PUSH),
	PUSH_MAP_MEMBERS("PUSH_MAP_MEMBERS", InstructionBaseType.PUSH),
	PUSH_INV_OTHERPLAYER_SLOTOBJ("PUSH_INV_OTHERPLAYER_SLOTOBJ", InstructionBaseType.PUSH),
	PUSH_INV_OTHERPLAYER_SLOTCOUNT("PUSH_INV_OTHERPLAYER_SLOTCOUNT", InstructionBaseType.PUSH),
	PUSH_INV_OTHERPLAYER_OBJCOUNT("PUSH_INV_OTHERPLAYER_OBJCOUNT", InstructionBaseType.PUSH),
	PUSH_RIGHTS("PUSH_RIGHTS", InstructionBaseType.PUSH),
	PUSH_REBOOT_TIMER("PUSH_REBOOT_TIMER", InstructionBaseType.PUSH),
	PUSH_WORLDID("PUSH_WORLDID", InstructionBaseType.PUSH),
	PUSH_RUNENERGY("PUSH_RUNENERGY", InstructionBaseType.PUSH),
	PUSH_RUNWEIGHT("PUSH_RUNWEIGHT", InstructionBaseType.PUSH),
	// 2x unknown
	PUSH_PLAYER_ISMEMBER("PUSH_PLAYER_ISMEMBER", InstructionBaseType.PUSH),
	PUSH_PLAYER_COMBATLEVEL("PUSH_PLAYER_COMBATLEVEL", InstructionBaseType.PUSH),
	PUSH_PLAYER_ISFEMALE("PUSH_PLAYER_ISFEMALE", InstructionBaseType.PUSH),
	PUSH_CHAT_RESTRICTED("PUSH_CHAT_RESTRICTED", InstructionBaseType.PUSH),
	PUSH_INV_FREESLOTCOUNT("PUSH_INV_FREESLOTCOUNT", InstructionBaseType.PUSH),
	PUSH_INV_WEIGHTEDSLOTCOUNT("PUSH_INV_WEIGHTEDSLOTCOUNT", InstructionBaseType.PUSH),
	PUSH_INV_WEIGHTEDSLOTCOUNT_STACKS("PUSH_INV_WEIGHTEDSLOTCOUNT_STACKS", InstructionBaseType.PUSH),
	PUSH_LANGUAGE("PUSH_LANGUAGE", InstructionBaseType.PUSH),

	// Account creation
	PUSH_CREATION_RC("PUSH_CREATION_RC", InstructionBaseType.PUSH),

	// Enum instructions
	PUSH_ENUM_VAL_STR("PUSH_ENUM_VAL_STR", InstructionBaseType.PUSH),
	PUSH_ENUM_VAL("PUSH_ENUM_VAL", InstructionBaseType.PUSH),
	PUSH_ENUM_CONTAINS_INT("PUSH_ENUM_CONTAINS_INT", InstructionBaseType.PUSH),
	PUSH_ENUM_CONTAINS_STR("PUSH_ENUM_CONTAINS_STR", InstructionBaseType.PUSH),
	PUSH_ENUM_SIZE("PUSH_ENUM_SIZE", InstructionBaseType.PUSH),
	PUSH_ENUM_INTVALKEYS_COUNT("PUSH_ENUM_INTVALKEYS_COUNT", InstructionBaseType.PUSH),
	PUSH_ENUM_STRVALKEYS_COUNT("PUSH_ENUM_STRVALKEYS_COUNT", InstructionBaseType.PUSH),
	PUSH_ENUM_INTVALKEY("PUSH_ENUM_INTVALKEY", InstructionBaseType.PUSH),
	PUSH_ENUM_STRVALKEY("PUSH_ENUM_STRVALKEY", InstructionBaseType.PUSH),

	// Friend instructions (includes friends list, ignore list, and friends
	// chat)
	PUSH_FRIENDLIST_SIZE("PUSH_FRIENDLIST_SIZE", InstructionBaseType.PUSH),
	PUSH_FRIEND_NAMES("PUSH_FRIEND_NAMES", InstructionBaseType.PUSH_MULTI),
	PUSH_FRIEND_NODEID("PUSH_FRIEND_NODEID", InstructionBaseType.PUSH),
	PUSH_FRIEND_RANK("PUSH_FRIEND_RANK", InstructionBaseType.PUSH),
	PUSH_FRIEND_WORLDFLAGS("PUSH_FRIEND_WORLDFLAGS", InstructionBaseType.PUSH),
	FRIEND_SETRANK("FRIEND_SETRANK", InstructionBaseType.EXECUTE),
	FRIENDLIST_ADD("FRIENDLIST_ADD", InstructionBaseType.EXECUTE),
	FRIENDLIST_DEL("FRIENDLIST_DEL", InstructionBaseType.EXECUTE),
	IGNORELIST_ADD("IGNORELIST_ADD", InstructionBaseType.EXECUTE),
	IGNORELIST_DEL("IGNORELIST_DEL", InstructionBaseType.EXECUTE),
	PUSH_IS_FRIEND("PUSH_IS_FRIEND", InstructionBaseType.PUSH),
	PUSH_FRIEND_WORLDNAME("PUSH_FRIEND_WORLDNAME", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_NAME("PUSH_FRIENDCHAT_NAME", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_USERCOUNT("PUSH_FRIENDCHAT_USERCOUNT", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_USER_NAME("PUSH_FRIENDCHAT_USER_NAME", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_USER_NODEID("PUSH_FRIENDCHAT_USER_NODEID", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_USER_RANK("PUSH_FRIENDCHAT_USER_RANK", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_RANKKICK("PUSH_FRIENDCHAT_RANKKICK", InstructionBaseType.PUSH),
	FRIENDCHAT_KICKUSER("FRIENDCHAT_KICKUSER", InstructionBaseType.EXECUTE),
	PUSH_FRIENDCHAT_ACTIVEPLAYERRANK("PUSH_FRIENDCHAT_ACTIVEPLAYERRANK", InstructionBaseType.PUSH),
	FRIENDCHAT_JOIN("FRIENDCHAT_JOIN", InstructionBaseType.EXECUTE),
	FRIENDCHAT_LEAVE("FRIENDCHAT_LEAVE", InstructionBaseType.EXECUTE),
	PUSH_IGNORELIST_SIZE("PUSH_IGNORELIST_SIZE", InstructionBaseType.PUSH),
	PUSH_IGNORE_NAMES("PUSH_IGNORE_NAMES", InstructionBaseType.PUSH_MULTI),
	PUSH_IS_IGNORED("PUSH_IS_IGNORED", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_USER_IS_ACTIVEPLAYER("PUSH_FRIENDCHAT_USER_IS_ACTIVEPLAYER", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_OWNER("PUSH_FRIENDCHAT_OWNER", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_USER_WORLDNAME("PUSH_FRIENDCHAT_USER_WORLDNAME", InstructionBaseType.PUSH),
	PUSH_FRIEND_GAME("PUSH_FRIEND_GAME", InstructionBaseType.PUSH),
	PUSH_FRIEND_SLOT("PUSH_FRIEND_SLOT", InstructionBaseType.PUSH),
	PUSH_IGNORE_SLOT("PUSH_IGNORE_SLOT", InstructionBaseType.PUSH),
	// 1x unknown (client paramater)
	IGNORELIST_ADDTEMP("IGNORELIST_ADDTEMP", InstructionBaseType.EXECUTE),
	PUSH_IGNORE_ISTEMP("PUSH_IGNORE_ISTEMP", InstructionBaseType.PUSH),
	PUSH_FRIENDCHAT_USER_NAMEUNFILTERED("PUSH_FRIENDCHAT_USER_NAMEUNFILTERED", InstructionBaseType.PUSH),
	PUSH_IGNORE_NAME("PUSH_IGNORE_NAME", InstructionBaseType.PUSH),
	PUSH_FRIEND_RECRUITED("PUSH_FRIEND_RECRUITED", InstructionBaseType.PUSH),

	// Clan instructions
	CLANSETTINGS_SETGUEST("CLANSETTINGS_SETGUEST", InstructionBaseType.PUSH),
	CLANSETTINGS_SETMAIN("CLANSETTINGS_SETMAIN", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_NAME("PUSH_CLANSETTINGS_NAME", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_ALLOWNONMEMBERS("PUSH_CLANSETTINGS_ALLOWNONMEMBERS", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_RANKTALK("PUSH_CLANSETTINGS_RANKTALK", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_RANKKICK("PUSH_CLANSETTINGS_RANKKICK", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_RANKLOOTSHARE("PUSH_CLANSETTINGS_RANKLOOTSHARE", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_MEMBERCOUNT("PUSH_CLANSETTINGS_MEMBERCOUNT", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_MEMBER_NAME("PUSH_CLANSETTINGS_MEMBER_NAME", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_MEMBER_RANK("PUSH_CLANSETTINGS_MEMBER_RANK", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_BANCOUNT("PUSH_CLANSETTINGS_BANCOUNT", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_BAN_NAME("PUSH_CLANSETTINGS_BAN_NAME", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_MEMBER_VARBIT("PUSH_CLANSETTINGS_MEMBER_VARBIT", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_OWNERSLOT("PUSH_CLANSETTINGS_OWNERSLOT", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_REPLACEMENTOWNERSLOT("PUSH_CLANSETTINGS_REPLACEMENTOWNERSLOT", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_MEMBER_SLOT("PUSH_CLANSETTINGS_MEMBER_SLOT", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_MEMBER_SORTEDSLOT("PUSH_CLANSETTINGS_MEMBER_SORTEDSLOT", InstructionBaseType.PUSH),
	PUSH_CLANSETTINGS_MEMBER_JOINDAY("PUSH_CLANSETTINGS_MEMBER_JOINDAY", InstructionBaseType.PUSH),
	CLANCHANNEL_SETGUEST("CLANCHANNEL_SETGUEST", InstructionBaseType.PUSH),
	CLANCHANNEL_SETMAIN("CLANCHANNEL_SETMAIN", InstructionBaseType.PUSH),
	PUSH_CLANCHANNEL_NAME("PUSH_CLANCHANNEL_NAME", InstructionBaseType.PUSH),
	PUSH_CLANCHANNEL_RANKKICK("PUSH_CLANCHANNEL_RANKKICK", InstructionBaseType.PUSH),
	PUSH_CLANCHANNEL_RANKTALK("PUSH_CLANCHANNEL_RANKTALK", InstructionBaseType.PUSH),
	PUSH_CLANCHANNEL_USERCOUNT("PUSH_CLANCHANNEL_USERCOUNT", InstructionBaseType.PUSH),
	PUSH_CLANCHANNEL_USER_NAME("PUSH_CLANCHANNEL_USER_NAME", InstructionBaseType.PUSH),
	PUSH_CLANCHANNEL_USER_RANK("PUSH_CLANCHANNEL_USER_RANK", InstructionBaseType.PUSH),
	PUSH_CLANCHANNEL_USER_NODEID("PUSH_CLANCHANNEL_USER_NODEID", InstructionBaseType.PUSH),
	CLANCHANNEL_KICKUSER("CLANCHANNEL_KICK_USER", InstructionBaseType.EXECUTE),
	PUSH_CLANCHANNEL_USER_SLOT("PUSH_CLANCHANNEL_USER_SLOT", InstructionBaseType.PUSH),
	PUSH_CLANCHANNEL_USER_SORTEDSLOT("PUSH_CLANCHANNEL_USER_SORTEDSLOT", InstructionBaseType.PUSH),
	PUSH_VARCLAN_ENABLED("PUSH_VARCLAN_ENABLED", InstructionBaseType.PUSH),
    
    //Exchange instructions
	PUSH_EXCHANGE_OFFER_ISSELL("PUSH_EXCHANGE_OFFER_ISSELL", InstructionBaseType.PUSH),
	PUSH_EXCHANGE_OFFER_OBJ("PUSH_EXCHANGE_OFFER_OBJ", InstructionBaseType.PUSH),
	PUSH_EXCHANGE_OFFER_PRICE("PUSH_EXCHANGE_OFFER_PRICE", InstructionBaseType.PUSH),
	PUSH_EXCHANGE_OFFER_COUNT("PUSH_EXCHANGE_OFFER_COUNT", InstructionBaseType.PUSH),
	PUSH_EXCHANGE_OFFER_COMPLETECOUNT("PUSH_EXCHANGE_OFFER_COMPLETECOUNT", InstructionBaseType.PUSH),
	PUSH_EXCHANGE_OFFER_COMPLETEGOLD("PUSH_EXCHANGE_OFFER_COMPLETEGOLD", InstructionBaseType.PUSH),
	PUSH_EXCHANGE_OFFER_ISEMPTY("PUSH_EXCHANGE_OFFER_ISEMPTY", InstructionBaseType.PUSH),
    //1x unknown
	PUSH_EXCHANGE_OFFER_ISFINISHED("PUSH_EXCHANGE_OFFER_ISFINISHED", InstructionBaseType.PUSH),
	PUSH_EXCHANGE_OFFER_ISSUBMITTING("PUSH_EXCHANGE_OFFER_ISSUBMITTING", InstructionBaseType.PUSH),
    

	// Arithmatic (math) instructions
	ADD("ADD", InstructionBaseType.PUSH),
	SUBTRACT("SUBTRACT", InstructionBaseType.PUSH),
	MULTIPLY("MULTIPLY", InstructionBaseType.PUSH),
	DIVIDE("DIVIDE", InstructionBaseType.PUSH),
	RANDOM("RANDOM", InstructionBaseType.PUSH),
	RANDOM_PLUS_ONE("RANDOM_PLUS_ONE", InstructionBaseType.PUSH),
	LINEAR_INERPOLATION("LINEAR_INTERPOLATION", InstructionBaseType.PUSH),
	// 1x unknown
	SET_BIT("SET_BIT", InstructionBaseType.PUSH),
	RESET_BIT("RESET_BIT", InstructionBaseType.PUSH),
	TEST_BIT("TEST_BIT", InstructionBaseType.PUSH),
	MODULO("MODULO", InstructionBaseType.PUSH),
	POWER("POWER", InstructionBaseType.PUSH),
	ROOT("ROOT", InstructionBaseType.PUSH),
	BITWISE_AND("BITWISE_AND", InstructionBaseType.PUSH),
	BITWISE_OR("BITWISE_OR", InstructionBaseType.PUSH),
	MIN("MIN", InstructionBaseType.PUSH),
	MAX("MAX", InstructionBaseType.PUSH),
	FRAC_MULTIPLY("FRAC_MULTIPLY", InstructionBaseType.PUSH),
	// 1x unknown
	HSL_RGB("HSL_RGB", InstructionBaseType.PUSH),
	BITWISE_NOT("BITWISE_NOT", InstructionBaseType.PUSH),

	// Text (string) instructions
	STRING_INT_CONCAT("STRING_INT_CONCAT", InstructionBaseType.PUSH),
	STRING_STRING_CONCAT("STRING_STRING_CONCAT", InstructionBaseType.PUSH),
	STRING_SIGNINT_CONCAT("STRING_SIGNINT_CONCAT", InstructionBaseType.PUSH),
	INT_COL_STRING("INT_COL_STRING", InstructionBaseType.PUSH),
	STRING_LOWER("STRING_LOWER", InstructionBaseType.PUSH),
	RUNEDAY_STR("RUNEDAY_STR", InstructionBaseType.PUSH),
	TEXT_GENDER("TEXT_GENDER", InstructionBaseType.PUSH),
	INT_STR("INT_STR", InstructionBaseType.PUSH),
	STR_COMPARE("STR_COMPARE", InstructionBaseType.PUSH),
	PUSH_TEXT_LINE_COUNT("PUSH_TEXT_LINE_COUNT", InstructionBaseType.PUSH),
	PUSH_TEXT_RENDER_WIDTH("PUSH_TEXT_RENDER_WIDTH", InstructionBaseType.PUSH),
	TEXT_CHOICE("TEXT_CHOICE", InstructionBaseType.PUSH),
	PUSH_ENCODED_STRING("PUSH_ENCODED_STRING", InstructionBaseType.PUSH),
	STRING_CHAR_CONCAT("STRING_CHAR_CONCAT", InstructionBaseType.PUSH),
	PUSH_CHAR_IS_BREAK("PUSH_CHAR_IS_BREAK", InstructionBaseType.PUSH),
	PUSH_CHAR_IS_ALPHANUMERIC("PUSH_CHAR_IS_ALPHANUMERIC", InstructionBaseType.PUSH),
	PUSH_CHAR_IS_ALPHA("PUSH_CHAR_IS_ALPHA", InstructionBaseType.PUSH),
	PUSH_CHAR_IS_NUMERIC("PUSH_CHAR_IS_NUMERIC", InstructionBaseType.PUSH),
	PUSH_STRLEN("PUSH_STRLEN", InstructionBaseType.PUSH),
	PUSH_SUBSTRING("PUSH_SUBSTRING", InstructionBaseType.PUSH),
	STRING_STRIPCODE("STRING_STRIPCODE", InstructionBaseType.PUSH),
	PUSH_INDEXOF_CHAR("PUSH_INDEXOF_CHAR", InstructionBaseType.PUSH),
	PUSH_INDEXOF_STRING("PUSH_INDEXOF_STRING", InstructionBaseType.PUSH),
	PUSH_CHAR_TOLOWER("PUSH_CHAR_TOLOWER", InstructionBaseType.PUSH),
	PUSH_CHAR_TOUPPER("PUSH_CHAR_TOUPPER", InstructionBaseType.PUSH),
	PUSH_INT_FORMATTEDSTR("PUSH_INT_FORMATTEDSTR", InstructionBaseType.PUSH),
	// 1x unknown
	PUSH_UTC_TIMESTAMP("PUSH_UTC_TIMESTAMP", InstructionBaseType.PUSH),
	PUSH_LONG_TO_BASE36STR("PUSH_LONG_TO_BASE36STR", InstructionBaseType.PUSH),

	SHOW_SELECTED_COMPONENT("SHOW_SELECTED_COMPONENT", InstructionBaseType.EXECUTE),
	SET_SELECTED_COMPONENT_SLOT("SET_SELECTED_COMPONENT_SLOT", InstructionBaseType.PUSH),

	// Object config instructions
	PUSH_OC_NAME("PUSH_OC_NAME", InstructionBaseType.PUSH),
	PUSH_OC_OP("PUSH_OC_OP", InstructionBaseType.PUSH),
	PUSH_OC_IOP("PUSH_OC_IOP", InstructionBaseType.PUSH),
	PUSH_OC_COST("PUSH_OC_COST", InstructionBaseType.PUSH),
	PUSH_OC_STACKABLE("PUSH_OC_STACKABLE", InstructionBaseType.PUSH),
	PUSH_OC_FROMCERT("PUSH_OC_FROMCERT", InstructionBaseType.PUSH),
	PUSH_OC_TOCERT("PUSH_OC_TOCERT", InstructionBaseType.PUSH),
	PUSH_OC_WEARPOS("PUSH_OC_WEARPOS", InstructionBaseType.PUSH),
	PUSH_OC_WEARTYPE("PUSH_OC_WEARTYPE", InstructionBaseType.PUSH),
	PUSH_OC_HIDEWEARPOS("PUSH_OC_HIDEWEARPOS", InstructionBaseType.PUSH),
	PUSH_OC_MEMBERS("PUSH_OC_MEMBERS", InstructionBaseType.PUSH),
	PUSH_OC_PARAM("PUSH_OC_PARAM", InstructionBaseType.PUSH),
	PUSH_OC_IOPCUR("PUSH_OC_IOPCUR", InstructionBaseType.PUSH),
	OBJ_SEARCH("OBJ_SEARCH", InstructionBaseType.PUSH),
	PUSH_OBJ_SEARCH_NEXTRESULT("PUSH_OBJ_SEARCH_NEXTRESULT", InstructionBaseType.PUSH),
	OBJ_SEARCH_RESET("OBJ_SEARCH_RESET", InstructionBaseType.EXECUTE),
	PUSH_OC_MULTISTACKSIZE("PUSH_OC_MULTISTACKSIZE", InstructionBaseType.PUSH),
	OBJ_SEARCH_INTPARAM("OBJ_SEARCH_INTPARAM", InstructionBaseType.PUSH),
	OBJ_SEARCH_STRPARAM("OBJ_SEARCH_STRPARAM", InstructionBaseType.PUSH),
	PUSH_OC_HASIOPCOL("PUSH_OC_HASIOPCOL", InstructionBaseType.PUSH),
	PUSH_OC_IOPCOL("PUSH_OC_IOPCOL", InstructionBaseType.PUSH),

	// NPC config instructions
	PUSH_NPC_PARAM("PUSH_NPC_PARAM", InstructionBaseType.PUSH),

	// Location config instructions
	PUSH_LOC_PARAM("PUSH_LOC_PARAM", InstructionBaseType.PUSH),

	// Struct config instructions
	PUSH_STRUCT_PARAM("PUSH_STRUCT_PARAM", InstructionBaseType.PUSH),

	// Base (render) config instructions
	PUSH_BASE_IDLEANIM("PUSH_BASE_IDLEANIM", InstructionBaseType.PUSH),

	// Chat instructions
	PUSH_PUBLICFILTERSTATUS("PUSH_PUBLICFILTERSTATUS", InstructionBaseType.PUSH),
	SET_CHATFILTERSTATUS("SET_CHATFILTERSTATUS", InstructionBaseType.EXECUTE),
	SEND_SNAPSHOT("SEND_SNAPSHOT", InstructionBaseType.EXECUTE),
	PUSH_CHAT_MESSAGE("PUSH_CHAT_MESSAGE", InstructionBaseType.PUSH),
	PUSH_CHAT_TYPE("PUSH_CHAT_TYPE", InstructionBaseType.PUSH),
	PUSH_PRIVATEFILTERSTATUS("PUSH_PRIVATEFILTERSTATUS", InstructionBaseType.PUSH),
	CHAT_SETMODE("CHAT_SETMODE", InstructionBaseType.EXECUTE),
	SEND_MES_PUBLIC("SEND_MES_PUBLIC", InstructionBaseType.EXECUTE),
	SEND_MES_PRIVATE("SEND_MES_PRIVATE", InstructionBaseType.EXECUTE),
	PUSH_CHAT_NAME("PUSH_CHAT_NAME", InstructionBaseType.PUSH),
	PUSH_CHAT_CLAN("PUSH_CHAT_CLAN", InstructionBaseType.PUSH),
	PUSH_CHAT_QUICKCHATID("PUSH_CHAT_QUICKCHATID", InstructionBaseType.PUSH),
	PUSH_PLAYER_NAME("PUSH_PLAYER_NAME", InstructionBaseType.PUSH),
	PUSH_TRADEFILTERSTATUS("PUSH_TRADEFILTERSTATUS", InstructionBaseType.PUSH),
	PUSH_CHAT_HISTORYSIZE("PUSH_CHAT_HISTORYSIZE", InstructionBaseType.PUSH),
	PUSH_CHAT_ARGS("PUSH_CHAT_ARGS", InstructionBaseType.PUSH),
	PUSH_CHAT_NAMEUNFILTERED("PUSH_CHAT_NAMEUNFILTERED", InstructionBaseType.PUSH),
	PUSH_PLAYER_NAMESIMPLE("PUSH_PLAYER_NAMESIMPLE", InstructionBaseType.PUSH),
	PUSH_CHAT_ID("PUSH_CHAT_ID", InstructionBaseType.PUSH),
	PUSH_CHAT_TIME("PUSH_CHAT_TIME", InstructionBaseType.PUSH),
	PUSH_CHAT_NAMESIMPLE("PUSH_CHAT_NAMESIMPLE", InstructionBaseType.PUSH),
	PUSH_QC_CATEGORY_NAME("PUSH_QC_CATEGORY_NAME", InstructionBaseType.PUSH),
	PUSH_QC_CATEGORY_SUBCATCOUNT("PUSH_QC_CATEGORY_SUBCATCOUNT", InstructionBaseType.PUSH),
	PUSH_QC_CATEGORY_SUBCAT("PUSH_QC_CATEGORY_SUBCAT", InstructionBaseType.PUSH),
	PUSH_QC_CATEGORY_PHRASECOUNT("PUSH_QC_CATEGORY_PHRASECOUNT", InstructionBaseType.PUSH),
	PUSH_QC_CATEGORY_PHRASE("PUSH_QC_CATEGORY_PHRASE", InstructionBaseType.PUSH),
	PUSH_QC_PHRASE_TEMPLATE("PUSH_QC_PHRASE_TEMPLATE", InstructionBaseType.PUSH),
	PUSH_QC_PHRASE_RESPONSECOUNT("PUSH_QC_PHRASE_RESPONSECOUNT", InstructionBaseType.PUSH),
	PUSH_QC_PHRASE_RESPONSE("PUSH_QC_PHRASE_RESPONSE", InstructionBaseType.PUSH),
	QC_PHRASE_SETACTIVE("QC_PHRASE_SETACTIVE", InstructionBaseType.EXECUTE),
	AQC_SENDPUBLIC("AQC_SENDPUBLIC", InstructionBaseType.EXECUTE),
	AQC_SENDPRIVATE("AQC_SENDPRIVATE", InstructionBaseType.EXECUTE),
	AQC_SENDFRIENDCHAT("AQC_SENDFRIENDCHAT", InstructionBaseType.EXECUTE),
	PUSH_QC_CATEGORY_SUBCAT_KEYCODE("PUSH_QC_CATEGORY_SUBCAT_KEYCODE", InstructionBaseType.PUSH),
	PUSH_QC_CATEGORY_PHRASE_KEYCODE("PUSH_QC_CATEGORY_PHRASE_KEYCODE", InstructionBaseType.PUSH),
	PUSH_QC_CATEGORY_SUBCAT_FORKEYCODE("PUSH_QC_CATEGORY_SUBCAT_FORKEYCODE", InstructionBaseType.PUSH),
	PUSH_QC_CATEGORY_PHRASE_FORKEYCODE("PUSH_QC_CATEGORY_PHRASE_FORKEYCODE", InstructionBaseType.PUSH),
	PUSH_QC_PHRASE_ARGCOUNT("PUSH_QC_PHRASE_ARGCOUNT", InstructionBaseType.PUSH),
	PUSH_QC_PHRASE_ARGTYPE("PUSH_QC_PHRASE_ARGTYPE", InstructionBaseType.PUSH),
	AQC_SETARG("AQC_SETARG", InstructionBaseType.EXECUTE),
	AQC_SETARG_OBJ("AQC_SETARG_OBJ", InstructionBaseType.EXECUTE),
	PUSH_QC_PHRASE_ARGKEY("PUSH_QC_PHRASE_ARGKEY", InstructionBaseType.PUSH),
	QC_SEARCH("QC_SEARCH", InstructionBaseType.PUSH),
	PUSH_QC_SEARCH_NEXTRESULT("PUSH_QC_SEARCH_NEXTRESULT", InstructionBaseType.PUSH),
	QC_SEARCH_RESET("QC_SEARCH_RESET", InstructionBaseType.EXECUTE),
	AQC_SENDCLANCHANNEL("AQC_SENDCLANCHANNEL", InstructionBaseType.EXECUTE),
	AQC_SENDGUESTCLANCHANNEL("AQC_SENDGUESTCLANCHANNEL", InstructionBaseType.EXECUTE),

	// Window mode instructions
	SET_FS_SIZE("SET_FS_SIZE", InstructionBaseType.PUSH),
	PUSH_WINDOW_MODE("PUSH_WINDOW_MODE", InstructionBaseType.PUSH),

	// World list instructions
	WORLDLIST_FETCH("WORLDLIST_FETCH", InstructionBaseType.PUSH),
	PUSH_WORLDLIST_FIRSTENTRY("PUSH_WORLDLIST_FIRSTENTRY", InstructionBaseType.PUSH),
	PUSH_WORLDLIST_NEXTENTRY("PUSH_WORLDLIST_NEXTENTRY", InstructionBaseType.PUSH),
	WORLDLIST_SETACTIVE("WORLDLIST_SETACTIVE", InstructionBaseType.PUSH),
	PUSH_WORLDLIST_ENTRY("PUSH_WORLDLIST_ENTRY", InstructionBaseType.PUSH),
	WORLDLIST_SORT("WORLDLIST_SORT", InstructionBaseType.EXECUTE),
	WORLDLIST_RESETACTIVE("DEFAULTWORLD_SETACTIVE", InstructionBaseType.EXECUTE),
	WORLDLIST_SETFETCHPING("WORLDLIST_SETFETCHPING", InstructionBaseType.EXECUTE),
	PUSH_ACTIVEWORLD_FLAGS("PUSH_ACTIVEWORLD_FLAGS", InstructionBaseType.PUSH),

	// Unknowns
	CONSOLE_PRINT("CONSOLE_PRINT", InstructionBaseType.EXECUTE),
	NOP("NOP", InstructionBaseType.NULL),
	IS_WINDOWS("IS_WINDOWS", InstructionBaseType.PUSH),
	TWITCH_LOGOUT(true, "TWITCH_LOGOUT", InstructionBaseType.PUSH),

	// Camera
	CAMERA_SETZOOM("SET_CAMERA_ZOOM", InstructionBaseType.EXECUTE),
	CAMERA_PUSH_ROTX("CAMERA_PUSH_ROTX", InstructionBaseType.PUSH),
	CAMERA_PUSH_ROTY("CAMERA_PUSH_ROTY", InstructionBaseType.PUSH),
	CAMERA_IS_ANINT1621_EQUALS_4("CAMERA_IS_ANINT1621_EQUALS_4", InstructionBaseType.PUSH),
	CAMERA_METHOD3100("CAMERA_METHOD3100", InstructionBaseType.EXECUTE),

	// SPECIAL ONES FOR AUTOMATIC IMPORTS! DO NOT TOUCH
	METHOD_CALL_WITH_PUSH("METHOD_CALL_WITH_PUSH", InstructionBaseType.PUSH),
	METHOD_CALL_WITH_MULTIPUSH("METHOD_CALL_WITH_MULTIPUSH", InstructionBaseType.PUSH_MULTI),
	METHOD_CALL("METHOD_CALL", InstructionBaseType.EXECUTE),

	// INPUT
	PUSH_MOUSE_BUTTONS_STATE("PUSH_MOUSE_BUTTONS_STATE", InstructionBaseType.PUSH), 
	
    //Quest instructions
	PUSH_QUEST_NAME("PUSH_QUEST_NAME", InstructionBaseType.PUSH),
    //1x unknown
	PUSH_QUEST_CATEGORY("PUSH_QUEST_CATEGORY", InstructionBaseType.PUSH),
	PUSH_QUEST_DIFFICULTY("PUSH_QUEST_DIFFICULTY", InstructionBaseType.PUSH),
	PUSH_QUEST_MEMBERS("PUSH_QUEST_MEMBERS", InstructionBaseType.PUSH),
	PUSH_QUEST_REWARD_POINTS("PUSH_QUEST_REWARD_POINTS", InstructionBaseType.PUSH),
	PUSH_QUEST_QUESTREQ_COUNT("PUSH_QUEST_QUESTREQ_COUNT", InstructionBaseType.PUSH),
	PUSH_QUEST_QUESTREQ("PUSH_QUEST_QUESTREQ", InstructionBaseType.PUSH),
	PUSH_QUEST_MEETS_QUESTREQ("PUSH_QUEST_MEETS_QUESTREQ", InstructionBaseType.PUSH),
	PUSH_QUEST_POINTSREQ("PUSH_QUEST_POINTSREQ", InstructionBaseType.PUSH),
	PUSH_QUEST_MEETS_POINTSREQ("PUSH_QUEST_MEETS_POINTSREQ", InstructionBaseType.PUSH),
	PUSH_QUEST_STATREQ_COUNT("PUSH_QUEST_STATREQ_COUNT", InstructionBaseType.PUSH),
	PUSH_QUEST_STATREQ("PUSH_QUEST_STATREQ", InstructionBaseType.PUSH),
	PUSH_QUEST_STATREQ_LEVEL("PUSH_QUEST_STATREQ_LEVEL", InstructionBaseType.PUSH),
	PUSH_QUEST_MEETS_STATREQ("PUSH_QUEST_MEETS_STATREQ", InstructionBaseType.PUSH),
	PUSH_QUEST_VARPREQ_COUNT("PUSH_QUEST_VARPREQ_COUNT", InstructionBaseType.PUSH),
	PUSH_QUEST_VARPREQ_NAME("PUSH_QUEST_VARPREQ_NAME", InstructionBaseType.PUSH),
	PUSH_QUEST_MEETS_VARPREQ("PUSH_QUEST_MEETS_VARPREQ", InstructionBaseType.PUSH),
	PUSH_QUEST_VARBITREQ_COUNT("PUSH_QUEST_VARBITREQ_COUNT", InstructionBaseType.PUSH),
	PUSH_QUEST_VARBITREQ_NAME("PUSH_QUEST_VARBITREQ_NAME", InstructionBaseType.PUSH),
	PUSH_QUEST_MEETS_VARBITREQ("PUSH_QUEST_MEETS_VARBITREQ", InstructionBaseType.PUSH),
	PUSH_QUEST_MEETS_REQS("PUSH_QUEST_MEETS_REQS", InstructionBaseType.PUSH),
	PUSH_QUEST_STARTED("PUSH_QUEST_STARTED", InstructionBaseType.PUSH),
	PUSH_QUEST_COMPLETED("PUSH_QUEST_COMPLETED", InstructionBaseType.PUSH),
	PUSH_QUEST_PARAM("PUSH_QUEST_PARAM", InstructionBaseType.PUSH),
	;

	/**
	 * Is the operand value large?
	 */
	private boolean large;

	/**
	 * The raw format of the instruction
	 */
	private String format;

	/**
	 * The type of this instruction ex: PUSH, CALL
	 */
	private InstructionBaseType baseType;

	/**
	 * Construct a new InstructionType, You won't be able to use it, unless from
	 * the enum itself
	 *
	 * @param format
	 *            the raw format of the instruction ex: \"BIPUSH: {operand}\"
	 * @param baseType
	 *            the base type of the instruction ex: PUSH, CALL
	 */
	private InstructionType(String format, InstructionBaseType baseType) {
		this(false, format, baseType);

	}

	/**
	 * Construct a new InstructionType, You won't be able to use it, unless from
	 * the enum itself
	 *
	 * @param large
	 *            read the integer operand as 32 bit or 8 bit?
	 * @param format
	 *            the raw format of the instruction ex: \"BIPUSH: {operand}\"
	 * @param baseType
	 *            the base type of the instruction ex: PUSH, CALL
	 */
	private InstructionType(boolean large, String format, InstructionBaseType baseType) {
		this.large = large;
		this.format = format;
		this.baseType = baseType;
	}

	/**
	 * @return the baseType
	 */
	public InstructionBaseType getBaseType() {
		return baseType;
	}

	/**
	 * @param baseType
	 *            the baseType to set
	 */
	public void setBaseType(InstructionBaseType baseType) {
		this.baseType = baseType;
	}

	/**
	 * @return the format
	 */
	public String getFormat() {
		return format;
	}

	/**
	 * @param format
	 *            the format to set
	 */
	public void setFormat(String format) {
		this.format = format;
	}

	/**
	 * @return the large
	 */
	public boolean isLarge() {
		return large;
	}

	/**
	 * @param large
	 *            the large to set
	 */
	public void setLarge(boolean large) {
		this.large = large;
	}

	public void print(Instruction instr, ScriptPrinter printer) {
		printer.println(getFormat().replace("{operand}", instr.getIntegerOperand() + ", " + instr.getObjectOperand() + ", " + instr.getLongOperand()));
	}

}
